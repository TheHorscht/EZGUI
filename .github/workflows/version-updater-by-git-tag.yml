name: Set version pushed by git tag into associated files

on:
  push:
    tags: "**"

jobs:
  version-updater:
    name: Insert version of git tag into files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      #- name: Set Version ENV
      #  run: echo "::set-env name=VERSION::'$(cat VERSION)"
      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Check output
        env:
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
        run: |
          echo $RELEASE_VERSION
          echo ${{ steps.vars.outputs.tag }}

      - name: Update EZGUI.lua version
        run: |
          #oldVersion=$(cat EZGUI.lua | grep v[0-9].[0-9].[0-9])
          #newVersion=${{ steps.vars.outputs.tag }}
          #sed -i 's/$oldVersion/$newVersion/g' EZGUI.lua

          cat EZGUI.lua | sed -i 's/$v[0-9].[0-9].[0-9]/$newVersion/g' EZGUI.lua

          git config --global user.name "github workflow version-updater-by-git-tag.yml"
          git config --global user.email "e@mail.com"
          git add EZGUI.lua
          git commit -m "Update version"
          git push

      # - name: Update version in 'package.json' and push changes
      #   run: |
      #     old_str="\"version\": \"1.2.3\""
      #     new_str="\"version\": \"1.3.0\""
      #     sed -i 's/$old_str/$new_str/g' package.json
      #     git config --global user.name "you username"
      #     git config --global user.email "you email"
      #     git add package.json
      #     git commit -m "Update version"
      #     git push

      # - name: Create Release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ env.VERSION }}
      #     release_name: ${{ env.VERSION }}
      #     commitish: master
